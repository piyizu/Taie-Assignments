Points-to sets of all variables
[NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]:<java.lang.Object: void <init>()>/%this -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]
[NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]:<java.lang.String: void <init>()>/$b0 -> []
[NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]:<java.lang.String: void <init>()>/$r2 -> []
[NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]:<java.lang.String: void <init>()>/%this -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: java.lang.String get(int)>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: java.lang.String get(int)>/i -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: java.lang.String get(int)>/temp$0 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: java.lang.String get(int)>/temp$2 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void <init>()>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void <init>()>/temp$0 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void <init>()>/temp$1 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void add(java.lang.String)>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void add(java.lang.String)>/s -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void add(java.lang.String)>/temp$0 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void add(java.lang.String)>/temp$1 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void add(java.lang.String)>/temp$2 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void add(java.lang.String)>/temp$3 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void add(java.lang.String)>/temp$4 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void ensureCapacity(int)>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void ensureCapacity(int)>/capacity -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void ensureCapacity(int)>/temp$0 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void ensureCapacity(int)>/temp$11 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void ensureCapacity(int)>/temp$2 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void ensureCapacity(int)>/temp$5 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void ensureCapacity(int)>/temp$9 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<StringList: void ensureCapacity(int)>/tmp -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:<java.lang.Object: void <init>()>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]:<java.lang.Object: void <init>()>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]:<java.lang.String: void <init>()>/$b0 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]:<java.lang.String: void <init>()>/$r2 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]:<java.lang.String: void <init>()>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: java.lang.String get(int)>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: java.lang.String get(int)>/i -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: java.lang.String get(int)>/temp$0 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: java.lang.String get(int)>/temp$2 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void <init>()>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void <init>()>/temp$0 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void <init>()>/temp$1 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void add(java.lang.String)>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void add(java.lang.String)>/s -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void add(java.lang.String)>/temp$0 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void add(java.lang.String)>/temp$1 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void add(java.lang.String)>/temp$2 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void add(java.lang.String)>/temp$3 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void add(java.lang.String)>/temp$4 -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void ensureCapacity(int)>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void ensureCapacity(int)>/capacity -> []
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void ensureCapacity(int)>/temp$0 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void ensureCapacity(int)>/temp$11 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void ensureCapacity(int)>/temp$2 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void ensureCapacity(int)>/temp$5 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void ensureCapacity(int)>/temp$9 -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<StringList: void ensureCapacity(int)>/tmp -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:<java.lang.Object: void <init>()>/%this -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]
[]:<SourceSink: java.lang.String source()>/temp$0 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]
[]:<SourceSink: void sink(java.lang.String)>/s -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<TaintInList: void main(java.lang.String[])>/%intconst0 -> []
[]:<TaintInList: void main(java.lang.String[])>/l1 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]
[]:<TaintInList: void main(java.lang.String[])>/l2 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]
[]:<TaintInList: void main(java.lang.String[])>/s1 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<TaintInList: void main(java.lang.String[])>/s2 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]
[]:<TaintInList: void main(java.lang.String[])>/temp$0 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]
[]:<TaintInList: void main(java.lang.String[])>/temp$1 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<TaintInList: void main(java.lang.String[])>/temp$2 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<TaintInList: void main(java.lang.String[])>/temp$3 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]
[]:<TaintInList: void main(java.lang.String[])>/temp$4 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]
[]:<TaintInList: void main(java.lang.String[])>/temp$5 -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]

Points-to sets of all static fields

Points-to sets of all instance fields
[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}.coder -> []
[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}.value -> []
[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}.elements -> [[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[]:NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}.size -> []
[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}.coder -> []
[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}.value -> []
[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}.elements -> [[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}, [NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}]
[]:NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}.size -> []

Points-to sets of all array indexes
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}[*] -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[0@L4] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}[*] -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic SourceSink.source(),type=java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void <init>()>[2@L16] newarray java.lang.String[%intconst0]}[*] -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]
[NewObj{<TaintInList: void main(java.lang.String[])>[9@L9] new StringList}]:NewObj{<StringList: void ensureCapacity(int)>[9@L29] newarray java.lang.String[temp$4]}[*] -> [[]:NewObj{<TaintInList: void main(java.lang.String[])>[12@L10] new java.lang.String}]

Detected 1 taint flow(s):
TaintFlow{<TaintInList: void main(java.lang.String[])>[3@L5] temp$1 = invokestatic <SourceSink: java.lang.String source()>(); -> <TaintInList: void main(java.lang.String[])>[8@L7] invokestatic <SourceSink: void sink(java.lang.String)>(s1);/0}

